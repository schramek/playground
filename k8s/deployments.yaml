apiVersion: apps/v1
kind: Deployment
metadata:
  name: app1
  labels:
    app: app1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app1
  template:
    metadata:
      labels:
        app: app1
    spec:
      containers:
      - name: app1
        image: docker.io/schramek/app1:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: app1
spec:
  selector:
    app: app1
  ports:
  - port: 80
    targetPort: 8080
  type: ClusterIP
---
#apiVersion: apps/v1
#kind: Deployment
#metadata:
#  name: app2
#  labels:
#    app: app2
#spec:
#  replicas: 1
#  selector:
#    matchLabels:
#      app: app2
#  template:
#    metadata:
#      labels:
#        app: app2
#    spec:
#      containers:
#      - name: app2
#        image: docker.io/schramek/app2:latest
#        imagePullPolicy: Always
#        ports:
#        - containerPort: 8080
#---
#apiVersion: v1
#kind: Service
#metadata:
#  name: app2
#spec:
#  selector:
#    app: app2
#  ports:
#  - port: 80
#    targetPort: 8080
#  type: ClusterIP
#---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app3
  labels:
    app: app3
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app3
  template:
    metadata:
      labels:
        app: app3
    spec:
      containers:
      - name: app3
        image: docker.io/schramek/node-proxy:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: app3
spec:
  selector:
    app: app3
  ports:
  - port: 80
    targetPort: 8080
  type: ClusterIP 
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mirror-proxy
  labels:
    app: mirror-proxy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mirror-proxy
  template:
    metadata:
      labels:
        app: mirror-proxy
    spec:
      containers:
      - name: mirror-proxy
        image: docker.io/schramek/clamav-proxy:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: scanner
spec:
  selector:
    app: scanner
  ports:
  - port: 3310
    targetPort: 3310
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: scanner
  labels:
    app: scanner
spec:
  replicas: 1
  selector:
    matchLabels:
      app: scanner
  template:
    metadata:
      labels:
        app: scanner
    spec:
      containers:
      - name: scanner
        image: "docker.io/schramek/clamav-scanner:5"
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3310
        volumeMounts:
        - name: scanner-signature-updates
          mountPath: /var/lib/clamav
      volumes:
      - name: scanner-signature-updates
        persistentVolumeClaim:
          claimName: scanner-signature-updates
---
apiVersion: v1
kind: Service
metadata:
  name: scanner
spec:
  selector:
    app: scanner
  ports:
  - port: 3310
    targetPort: 3310
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: scanner-signature-updates
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
